#jinja2: lstrip_blocks: "False", trim_blocks: "True"
---
apiVersion: ceph.rook.io/v1
kind: CephCluster
metadata:
  name: rook-ceph
  namespace: {{ rook_k8s_namespace }}
spec:
  cephVersion:
    image: ceph/ceph:v14.2.6
    allowUnsupported: false
  dataDirHostPath: {{ rook_data_dir_host_path }}
  skipUpgradeChecks: false
  continueUpgradeAfterChecksEvenIfNotHealthy: false
  mon:
    count: {{ rook_mon_count }}
    allowMultiplePerNode: {{ rook_mon_allow_multiple_per_node }}
  dashboard:
    enabled: {{ rook_dashboard_enabled }}
    ssl: {{ rook_dashboard_ssl_enabled }}
  monitoring:
    enabled: {{ rook_monitoring_enabled }}
    rulesNamespace: {{ rook_k8s_namespace }}
  network:
    hostNetwork: {{ rook_operator_host_network_enabled }}
  rbdMirroring:
    workers: 0
  crashCollector:
    disable: {{ rook_crash_collector_disabled }}
  placement:
    all:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: {{ rook_node_affinity_label_key }}
              operator: In
              values:
              - {{ rook_node_affinity_label_value }}
      tolerations:
      - operator: Exists
  resources:
    mgr:
      limits:
        cpu: "{{ rook_mgr_resource_limit_cpu }}"
        memory: "{{ rook_mgr_resource_limit_memory }}"
      requests:
        cpu: "{{ rook_mgr_resource_request_cpu }}"
        memory: "{{ rook_mgr_resource_request_memory }}"
    mon:
      limits:
        cpu: "{{ rook_mon_resource_limit_cpu }}"
        memory: "{{ rook_mon_resource_limit_memory }}"
      requests:
        cpu: "{{ rook_mon_resource_request_cpu }}"
        memory: "{{ rook_mon_resource_request_memory }}"
    osd:
      limits:
        cpu: "{{ rook_osd_resource_limit_cpu }}"
        memory: "{{ rook_osd_resource_limit_memory }}"
      requests:
        cpu: "{{ rook_osd_resource_request_cpu }}"
        memory: "{{ rook_osd_resource_request_memory }}"
  removeOSDsIfOutAndSafeToRemove: false
  priorityClassNames:
    all: {{ rook_k8s_priority_class_name }}
  storage:
    useAllNodes: {{ rook_storage_use_all_nodes }}
    useAllDevices: {{ rook_storage_use_all_devices }}
    config:
      storeType: {{ rook_storage_store_type }}
{% if (rook_storage_use_all_nodes == 'false' and rook_storage_use_all_devices == 'false') %}
{{ rook_storage_nodes }}
{% endif %}
  disruptionManagement:
    managePodBudgets: false
    osdMaintenanceTimeout: 30
    manageMachineDisruptionBudgets: false
    machineDisruptionBudgetNamespace: openshift-machine-api
