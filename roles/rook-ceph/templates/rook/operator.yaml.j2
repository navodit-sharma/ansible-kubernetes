---
# Rook Ceph Operator Config
# Use this ConfigMap to override operator configurations
# Precedence will be given to this config in case
# Env Var also exists for the same
#
kind: ConfigMap
apiVersion: v1
metadata:
  name: rook-ceph-operator-config
  namespace: {{ rook_k8s_namespace }}
data:
  # # (Optional) Ceph Provisioner NodeAffinity.
  # CSI_PROVISIONER_NODE_AFFINITY: "role=storage-node; storage=rook, ceph"
  # # (Optional) CEPH CSI provisioner tolerations list. Put here list of taints you want to tolerate in YAML format.
  # # CSI provisioner would be best to start on the same nodes as other ceph daemons.
  # CSI_PROVISIONER_TOLERATIONS: |
  #   - effect: NoSchedule
  #     key: node-role.kubernetes.io/controlplane
  #     operator: Exists
  #   - effect: NoExecute
  #     key: node-role.kubernetes.io/etcd
  #     operator: Exists
  # # (Optional) Ceph CSI plugin NodeAffinity.
  # CSI_PLUGIN_NODE_AFFINITY: "role=storage-node; storage=rook, ceph"
  # # (Optional) CEPH CSI plugin tolerations list. Put here list of taints you want to tolerate in YAML format.
  # # CSI plugins need to be started on all the nodes where the clients need to mount the storage.
  # CSI_PLUGIN_TOLERATIONS: |
  #   - effect: NoSchedule
  #     key: node-role.kubernetes.io/controlplane
  #     operator: Exists
  #   - effect: NoExecute
  #     key: node-role.kubernetes.io/etcd
  #     operator: Exists

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rook-ceph-operator
  namespace: {{ rook_k8s_namespace }}
  labels:
    operator: rook
    storage-backend: ceph
spec:
  selector:
    matchLabels:
      app: rook-ceph-operator
  replicas: 1
  template:
    metadata:
      labels:
        app: rook-ceph-operator
    spec:
      serviceAccountName: rook-ceph-system
      priorityClassName: {{ rook_k8s_priority_class_name }}
      containers:
      - name: rook-ceph-operator
        image: rook/ceph:v1.2.4
        args: ["ceph", "operator"]
        volumeMounts:
        - mountPath: /var/lib/rook
          name: rook-config
        - mountPath: /etc/ceph
          name: default-config-dir
        env:
        - name: ROOK_CURRENT_NAMESPACE_ONLY
          value: "false"
        - name: RBAC_ENABLED
          value: "true"

        - name: AGENT_PRIORITY_CLASS_NAME
          value: "{{ rook_k8s_priority_class_name }}"
        - name: AGENT_MOUNT_SECURITY_MODE
          value: "Any"
        - name: AGENT_TOLERATIONS
          value: |
            - operator: Exists

        - name: DISCOVER_PRIORITY_CLASS_NAME
          value: "{{ rook_k8s_priority_class_name }}"
        - name: DISCOVER_AGENT_NODE_AFFINITY
          value: "{{ rook_node_affinity_label_key }}={{ rook_node_affinity_label_value }}"
        - name: DISCOVER_TOLERATIONS
          value: |
            - operator: Exists

        - name: CSI_PROVISIONER_NODE_AFFINITY
          value: "{{ rook_node_affinity_label_key }}={{ rook_node_affinity_label_value }}"
        - name: CSI_PROVISIONER_TOLERATIONS
          value: |
            - operator: Exists

        - name: CSI_PLUGIN_PRIORITY_CLASS_NAME
          value: "{{ rook_k8s_priority_class_name }}"
        - name: CSI_PLUGIN_TOLERATIONS
          value: |
            - operator: Exists

        - name: ROOK_ALLOW_MULTIPLE_FILESYSTEMS
          value: "false"
        - name: ROOK_LOG_LEVEL
          value: "{{ rook_log_level }}"
        - name: ROOK_CEPH_STATUS_CHECK_INTERVAL
          value: "60s"
        - name: ROOK_MON_HEALTHCHECK_INTERVAL
          value: "45s"
        - name: ROOK_MON_OUT_TIMEOUT
          value: "600s"
        - name: ROOK_DISCOVER_DEVICES_INTERVAL
          value: "60m"
        - name: ROOK_HOSTPATH_REQUIRES_PRIVILEGED
          value: "false"
        - name: ROOK_ENABLE_SELINUX_RELABELING
          value: "false"
        - name: ROOK_ENABLE_FSGROUP
          value: "false"
        - name: ROOK_DISABLE_DEVICE_HOTPLUG
          value: "false"
        - name: DISCOVER_DAEMON_UDEV_BLACKLIST
          value: "(?i)dm-[0-9]+,(?i)rbd[0-9]+,(?i)nbd[0-9]+"
        - name: ROOK_ENABLE_FLEX_DRIVER
          value: "false"
        - name: ROOK_ENABLE_DISCOVERY_DAEMON
          value: "true"
        - name: ROOK_CSI_ENABLE_CEPHFS
          value: "true"
        - name: ROOK_CSI_ENABLE_RBD
          value: "true"
        - name: ROOK_CSI_ENABLE_GRPC_METRICS
          value: "true"
        - name: CSI_ENABLE_SNAPSHOTTER
          value: "true"
        - name: CSI_FORCE_CEPHFS_KERNEL_CLIENT
          value: "true"
        - name: CSI_CEPHFS_PLUGIN_UPDATE_STRATEGY
          value: "RollingUpdate"
        - name: CSI_RBD_PLUGIN_UPDATE_STRATEGY
          value: "RollingUpdate"
        - name: ROOK_CSI_KUBELET_DIR_PATH
          value: "/var/lib/kubelet"
        - name: CSI_CEPHFS_GRPC_METRICS_PORT
          value: "9091"
        - name: CSI_CEPHFS_LIVENESS_METRICS_PORT
          value: "9081"
        - name: CSI_RBD_GRPC_METRICS_PORT
          value: "9090"
        - name: CSI_RBD_LIVENESS_METRICS_PORT
          value: "9080"
        - name: ROOK_UNREACHABLE_NODE_TOLERATION_SECONDS
          value: "5"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      volumes:
      - name: rook-config
        emptyDir: {}
      - name: default-config-dir
        emptyDir: {}
