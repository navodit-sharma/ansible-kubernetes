
# Gather package facts
- name: Gather Package facts
  package_facts:
    manager: apt

# Install general dependency packages
- name: Install dependencies for Kubernetes
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - curl
      - apt-transport-https
      - ca-certificates
      - gnupg-agent
      - gnupg2
      - software-properties-common

# Remove iptables tool packages if installed
- name: Uninstall iptables-persistent
  apt:
    name: iptables-persistent
    state: absent
  when: '"iptables-persistent" in ansible_facts.packages'
- name: Uninstall netfilter-persistent
  apt:
    name: netfilter-persistent
    state: absent
  when: '"netfilter-persistent" in ansible_facts.packages'

# Let iptables see bridged traffic
- name: Setup br-netfilter module
  template:
    backup: no
    dest: /etc/modules-load.d/k8s.conf
    group: "{{ kubernetes_system_group }}"
    owner: "{{ kubernetes_system_user }}"
    mode: 0755
    src: "{{role_path}}/templates/modules/bridge.conf.j2"

- name: Load BrNetfilter module
  modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - br_netfilter
    - ip_vs
    - ip_vs_rr
    - ip_vs_wrr
    - ip_vs_sh
    - nf_conntrack

- name: Sysctl - enable iptables to see bridged traffic
  sysctl:
    name: "{{ item.key }}"
    reload: yes
    state: present
    value: "{{ item.value }}"
  with_items: "{{ kubernetes_sysctl_iptables_bridged_traffic }}"

# Enable ipforwarding and broadcasting
- name: Sysctl - enable ip forwarding and broadcasting
  sysctl:
    name: "{{ item.key }}"
    reload: yes
    state: present
    value: "{{ item.value }}"
  with_items: "{{ kubernetes_sysctl_ipforwarding_broadcasting }}"

# Disable swap on k8s VMs
- name: Disable SWAP since kubernetes can't work with swap enabled
  block:
    - name: Disable SWAP
      shell: |
        swapoff -a
      changed_when: false
    - name: Disable SWAP in fstab
      replace:
        path: /etc/fstab
        regexp: '^(.+?\sswap\s+sw\s+.*)$'
        replace: '# \1'
      changed_when: false

# Add repository
- name: Add apt signing key
  shell: "curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg {{ kubernetes_apt_key_url }}"
  changed_when: false

- name: Add apt repository
  template:
    backup: no
    dest: /etc/apt/sources.list.d/apt_kubernetes_io.list
    group: "{{ kubernetes_system_group }}"
    owner: "{{ kubernetes_system_user }}"
    mode: 0644
    src: "{{role_path}}/templates/apt/apt_kubernetes_io.list.j2"

# Create required directories for kubernetes setup
- name: Create required kubernetes config directories
  file:
    path: "{{ item }}"
    state: directory
    group: "{{ kubernetes_system_group }}"
    owner: "{{ kubernetes_system_user }}"
    mode: 0755
    recurse: yes
  with_items:
    - "{{ kubernetes_log_dir_path }}"
    - "/etc/cni/net.d"
    - "/etc/bash_completion.d"
